What happens when you type google.com in your browser and press Enter?

I have never really thought about this question until when I changed career when I enrolled in the ALX-S.E. program. However, the program has broadened my understanding of the workings of the browser and different servers. So here is my understanding of what happens when the above question is activated as regards to the requirements of the project: -

DNS REQUEST.
When I type google in my browser and hit ENTER, the first thing that happens is a DNS (Domain Name System) resolution. The browser translates human-friendly domain name ‘www.google.com’ into an IP address which is like a phonebook for the internet fetching the corresponding IP address for Google’s service.

TCP/IP.
After acquiring the IP address, my browser establishes a connection with the server using the TCP/IP (Transmission Control Protocol/Internet Protocol). TCP ensures reliable data transmission by breaking down data into packets, sending them and then reassembling them in the destination. IP handles routing and addressing ensuring that data reaches the correct server. 

FIREWALL.
After acquiring the connection, the broken-down data that is packets, pass through a firewall. Firewall is a security measure that protects servers and networks from unauthorized access by filtering out potentially harmful traffic.

HTTPS/SSL.
Since google.com is a secure website, my browser will initiate an HTTPS (Hypertext Transfer Protocol Secure) connection. HTTPS ensures encrypted communication between my browser and the server. The server presents a digital certificate (using SSL/TLS protocols) to verify its identity preventing eavesdropping and data tampering.

LOAD-BALANCER.
So, suppose I type google.com in my various devices like phone, tablet, laptop, desktop, smart-tv, this will mean that there are many requests being made to the google server to retrieve information. Consequently, Google’s infrastructure will employ load-balancers. Load balancers will distribute incoming requests from my devices across multiple servers to ensure efficient handling and prevent overload to any specific server.


WEB-SERVER.
A web server is a software program that serves static content, like simple HTML pages, images or plain text files. Once the requests have been evenly distributed to the servers by the load-balancer, they will be processed by more than one web servers. The web server would then process the request and generate a response, which would typically include the HTML, CSS, and JavaScript files that make up the web page.

APPLICATION SERVER.
An application server handles dynamic content. When the web server receives the request from the load balancer, it sends the request to the application server, which processes the request and generates the search results.

DATABASE.
A database is a collection of stored data that is organized in a way that allows efficient retrieval, manipulation and management. The application server makes a request to the database in order to retrieve the required data. Once the application data has obtained the necessary data, it sends it back to the web server which includes it in the response that is sent back to the browser. The browser then uses this information to display in the search results.
In conclusion, typing “google.com” triggers a chain of events involving DNS resolution, TCP/IP communication, security measures (firewalls and SSL), load balancing, web servers, application servers, and databases. All these components work together seamlessly to deliver the Google search results on my screen. 

